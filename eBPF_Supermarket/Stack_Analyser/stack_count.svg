<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="390" onload="init(evt)" viewBox="0 0 1200 390" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="390.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="373" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="373" > </text>
<g id="frames">
<g >
<title>__GI_sync (54 samples, 6.89%)</title><rect x="268.9" y="293" width="81.3" height="15.0" fill="rgb(245,94,8)" rx="2" ry="2" />
<text  x="271.88" y="303.5" >__GI_sync</text>
</g>
<g >
<title>asm_sysvec_call_function_single (1 samples, 0.13%)</title><rect x="31.1" y="261" width="1.5" height="15.0" fill="rgb(250,96,38)" rx="2" ry="2" />
<text  x="34.07" y="271.5" ></text>
</g>
<g >
<title>fletcher16 (8 samples, 1.02%)</title><rect x="85.3" y="293" width="12.0" height="15.0" fill="rgb(215,111,42)" rx="2" ry="2" />
<text  x="88.26" y="303.5" ></text>
</g>
<g >
<title>stress_cpu_prime (9 samples, 1.15%)</title><rect x="223.7" y="293" width="13.6" height="15.0" fill="rgb(234,110,13)" rx="2" ry="2" />
<text  x="226.72" y="303.5" ></text>
</g>
<g >
<title>-------------------------------- (2 samples, 0.26%)</title><rect x="247.8" y="277" width="3.0" height="15.0" fill="rgb(211,176,6)" rx="2" ry="2" />
<text  x="250.81" y="287.5" ></text>
</g>
<g >
<title>__x64_sys_madvise (5 samples, 0.64%)</title><rect x="97.3" y="229" width="7.5" height="15.0" fill="rgb(227,98,27)" rx="2" ry="2" />
<text  x="100.30" y="239.5" ></text>
</g>
<g >
<title>-------------------------------- (1 samples, 0.13%)</title><rect x="34.1" y="277" width="1.5" height="15.0" fill="rgb(227,98,29)" rx="2" ry="2" />
<text  x="37.08" y="287.5" ></text>
</g>
<g >
<title>__kernel_cosl (3 samples, 0.38%)</title><rect x="243.3" y="293" width="4.5" height="15.0" fill="rgb(241,42,52)" rx="2" ry="2" />
<text  x="246.29" y="303.5" ></text>
</g>
<g >
<title>__get_user_pages (5 samples, 0.64%)</title><rect x="97.3" y="133" width="7.5" height="15.0" fill="rgb(239,140,54)" rx="2" ry="2" />
<text  x="100.30" y="143.5" ></text>
</g>
<g >
<title>sync_fs_one_sb (1 samples, 0.13%)</title><rect x="341.1" y="181" width="1.5" height="15.0" fill="rgb(247,218,44)" rx="2" ry="2" />
<text  x="344.12" y="191.5" ></text>
</g>
<g >
<title>lru_cache_add (1 samples, 0.13%)</title><rect x="1178.0" y="117" width="1.5" height="15.0" fill="rgb(251,163,0)" rx="2" ry="2" />
<text  x="1180.96" y="127.5" ></text>
</g>
<g >
<title>do_group_exit (1 samples, 0.13%)</title><rect x="10.0" y="261" width="1.5" height="15.0" fill="rgb(243,124,45)" rx="2" ry="2" />
<text  x="13.00" y="271.5" ></text>
</g>
<g >
<title>remove_vma (1 samples, 0.13%)</title><rect x="10.0" y="181" width="1.5" height="15.0" fill="rgb(233,32,40)" rx="2" ry="2" />
<text  x="13.00" y="191.5" ></text>
</g>
<g >
<title>__flush_workqueue (3 samples, 0.38%)</title><rect x="887.5" y="181" width="4.5" height="15.0" fill="rgb(205,58,5)" rx="2" ry="2" />
<text  x="890.47" y="191.5" ></text>
</g>
<g >
<title>handle_pte_fault (2 samples, 0.26%)</title><rect x="1187.0" y="181" width="3.0" height="15.0" fill="rgb(223,118,25)" rx="2" ry="2" />
<text  x="1189.99" y="191.5" ></text>
</g>
<g >
<title>madvise_vma_behavior (5 samples, 0.64%)</title><rect x="97.3" y="181" width="7.5" height="15.0" fill="rgb(225,160,3)" rx="2" ry="2" />
<text  x="100.30" y="191.5" ></text>
</g>
<g >
<title>exit_to_user_mode_loop (1 samples, 0.13%)</title><rect x="222.2" y="181" width="1.5" height="15.0" fill="rgb(236,79,9)" rx="2" ry="2" />
<text  x="225.22" y="191.5" ></text>
</g>
<g >
<title>sysvec_call_function_single (1 samples, 0.13%)</title><rect x="246.3" y="245" width="1.5" height="15.0" fill="rgb(215,121,46)" rx="2" ry="2" />
<text  x="249.30" y="255.5" ></text>
</g>
<g >
<title>__GI___libc_open (1 samples, 0.13%)</title><rect x="240.3" y="293" width="1.5" height="15.0" fill="rgb(226,64,33)" rx="2" ry="2" />
<text  x="243.28" y="303.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (7 samples, 0.89%)</title><rect x="1174.9" y="261" width="10.6" height="15.0" fill="rgb(228,89,22)" rx="2" ry="2" />
<text  x="1177.95" y="271.5" ></text>
</g>
<g >
<title>__bid_extendxftd (1 samples, 0.13%)</title><rect x="26.6" y="293" width="1.5" height="15.0" fill="rgb(252,202,30)" rx="2" ry="2" />
<text  x="29.56" y="303.5" ></text>
</g>
<g >
<title>-------------------------------- (11 samples, 1.40%)</title><rect x="64.2" y="277" width="16.5" height="15.0" fill="rgb(216,78,0)" rx="2" ry="2" />
<text  x="67.18" y="287.5" ></text>
</g>
<g >
<title>blkdev_issue_flush (1 samples, 0.13%)</title><rect x="892.0" y="181" width="1.5" height="15.0" fill="rgb(206,171,41)" rx="2" ry="2" />
<text  x="894.99" y="191.5" ></text>
</g>
<g >
<title>copy_process (2 samples, 0.26%)</title><rect x="13.0" y="181" width="3.0" height="15.0" fill="rgb(242,169,38)" rx="2" ry="2" />
<text  x="16.01" y="191.5" ></text>
</g>
<g >
<title>[unknown] (612 samples, 78.06%)</title><rect x="268.9" y="309" width="921.1" height="15.0" fill="rgb(223,17,1)" rx="2" ry="2" />
<text  x="271.88" y="319.5" >[unknown]</text>
</g>
<g >
<title>link_path_walk.part.0.constprop.0 (1 samples, 0.13%)</title><rect x="240.3" y="165" width="1.5" height="15.0" fill="rgb(214,147,53)" rx="2" ry="2" />
<text  x="243.28" y="175.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (1 samples, 0.13%)</title><rect x="106.3" y="197" width="1.5" height="15.0" fill="rgb(253,148,21)" rx="2" ry="2" />
<text  x="109.33" y="207.5" ></text>
</g>
<g >
<title>sysvec_call_function_single (1 samples, 0.13%)</title><rect x="106.3" y="245" width="1.5" height="15.0" fill="rgb(241,2,38)" rx="2" ry="2" />
<text  x="109.33" y="255.5" ></text>
</g>
<g >
<title>do_madvise (5 samples, 0.64%)</title><rect x="97.3" y="213" width="7.5" height="15.0" fill="rgb(213,155,6)" rx="2" ry="2" />
<text  x="100.30" y="223.5" ></text>
</g>
<g >
<title>ksys_sync (54 samples, 6.89%)</title><rect x="268.9" y="213" width="81.3" height="15.0" fill="rgb(253,144,17)" rx="2" ry="2" />
<text  x="271.88" y="223.5" >ksys_sync</text>
</g>
<g >
<title>-------------------------------- (2 samples, 0.26%)</title><rect x="187.6" y="277" width="3.0" height="15.0" fill="rgb(226,131,49)" rx="2" ry="2" />
<text  x="190.60" y="287.5" ></text>
</g>
<g >
<title>stress_cpu_int128_float.avx2 (1 samples, 0.13%)</title><rect x="213.2" y="293" width="1.5" height="15.0" fill="rgb(251,209,16)" rx="2" ry="2" />
<text  x="216.19" y="303.5" ></text>
</g>
<g >
<title>stress_cpu_dither.avx2 (2 samples, 0.26%)</title><rect x="252.3" y="293" width="3.0" height="15.0" fill="rgb(237,66,29)" rx="2" ry="2" />
<text  x="255.32" y="303.5" ></text>
</g>
<g >
<title>-------------------------------- (1 samples, 0.13%)</title><rect x="37.1" y="277" width="1.5" height="15.0" fill="rgb(219,180,4)" rx="2" ry="2" />
<text  x="40.09" y="287.5" ></text>
</g>
<g >
<title>__bid64_mul (1 samples, 0.13%)</title><rect x="23.5" y="293" width="1.6" height="15.0" fill="rgb(229,67,49)" rx="2" ry="2" />
<text  x="26.55" y="303.5" ></text>
</g>
<g >
<title>stress_vm_cache_stripe.avx2 (3 samples, 0.38%)</title><rect x="1185.5" y="293" width="4.5" height="15.0" fill="rgb(244,9,43)" rx="2" ry="2" />
<text  x="1188.48" y="303.5" ></text>
</g>
<g >
<title>-------------------------------- (2 samples, 0.26%)</title><rect x="29.6" y="277" width="3.0" height="15.0" fill="rgb(219,63,22)" rx="2" ry="2" />
<text  x="32.57" y="287.5" ></text>
</g>
<g >
<title>flush_workqueue_prep_pwqs (2 samples, 0.26%)</title><rect x="889.0" y="165" width="3.0" height="15.0" fill="rgb(242,138,11)" rx="2" ry="2" />
<text  x="891.98" y="175.5" ></text>
</g>
<g >
<title>percpu_counter_add_batch (1 samples, 0.13%)</title><rect x="341.1" y="133" width="1.5" height="15.0" fill="rgb(221,191,38)" rx="2" ry="2" />
<text  x="344.12" y="143.5" ></text>
</g>
<g >
<title>-------------------------------- (1 samples, 0.13%)</title><rect x="241.8" y="277" width="1.5" height="15.0" fill="rgb(247,131,35)" rx="2" ry="2" />
<text  x="244.79" y="287.5" ></text>
</g>
<g >
<title>-------------------------------- (2 samples, 0.26%)</title><rect x="252.3" y="277" width="3.0" height="15.0" fill="rgb(244,155,9)" rx="2" ry="2" />
<text  x="255.32" y="287.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (54 samples, 6.89%)</title><rect x="268.9" y="261" width="81.3" height="15.0" fill="rgb(219,112,22)" rx="2" ry="2" />
<text  x="271.88" y="271.5" >entry_SYS..</text>
</g>
<g >
<title>-------------------------------- (1 samples, 0.13%)</title><rect x="19.0" y="277" width="1.5" height="15.0" fill="rgb(210,198,14)" rx="2" ry="2" />
<text  x="22.03" y="287.5" ></text>
</g>
<g >
<title>-------------------------------- (2 samples, 0.26%)</title><rect x="20.5" y="277" width="3.0" height="15.0" fill="rgb(246,84,7)" rx="2" ry="2" />
<text  x="23.54" y="287.5" ></text>
</g>
<g >
<title>__alloc_pages (1 samples, 0.13%)</title><rect x="1188.5" y="101" width="1.5" height="15.0" fill="rgb(241,127,44)" rx="2" ry="2" />
<text  x="1191.49" y="111.5" ></text>
</g>
<g >
<title>get_page_from_freelist (1 samples, 0.13%)</title><rect x="1188.5" y="85" width="1.5" height="15.0" fill="rgb(253,175,20)" rx="2" ry="2" />
<text  x="1191.49" y="95.5" ></text>
</g>
<g >
<title>__handle_mm_fault (2 samples, 0.26%)</title><rect x="1187.0" y="197" width="3.0" height="15.0" fill="rgb(237,168,9)" rx="2" ry="2" />
<text  x="1189.99" y="207.5" ></text>
</g>
<g >
<title>handle_mm_fault (2 samples, 0.26%)</title><rect x="101.8" y="117" width="3.0" height="15.0" fill="rgb(244,117,40)" rx="2" ry="2" />
<text  x="104.81" y="127.5" ></text>
</g>
<g >
<title>do_wp_page (6 samples, 0.77%)</title><rect x="1176.5" y="165" width="9.0" height="15.0" fill="rgb(233,127,36)" rx="2" ry="2" />
<text  x="1179.45" y="175.5" ></text>
</g>
<g >
<title>sync_inodes_one_sb (1 samples, 0.13%)</title><rect x="342.6" y="181" width="1.5" height="15.0" fill="rgb(234,94,28)" rx="2" ry="2" />
<text  x="345.63" y="191.5" ></text>
</g>
<g >
<title>faultin_vma_page_range (5 samples, 0.64%)</title><rect x="97.3" y="149" width="7.5" height="15.0" fill="rgb(254,109,54)" rx="2" ry="2" />
<text  x="100.30" y="159.5" ></text>
</g>
<g >
<title>down_read (11 samples, 1.40%)</title><rect x="312.5" y="181" width="16.6" height="15.0" fill="rgb(242,82,16)" rx="2" ry="2" />
<text  x="315.53" y="191.5" ></text>
</g>
<g >
<title>hamming84 (1 samples, 0.13%)</title><rect x="250.8" y="293" width="1.5" height="15.0" fill="rgb(235,75,17)" rx="2" ry="2" />
<text  x="253.82" y="303.5" ></text>
</g>
<g >
<title>__kernel_rem_pio2 (2 samples, 0.26%)</title><rect x="247.8" y="293" width="3.0" height="15.0" fill="rgb(227,35,25)" rx="2" ry="2" />
<text  x="250.81" y="303.5" ></text>
</g>
<g >
<title>clogf32x (1 samples, 0.13%)</title><rect x="80.7" y="293" width="1.5" height="15.0" fill="rgb(225,222,21)" rx="2" ry="2" />
<text  x="83.74" y="303.5" ></text>
</g>
<g >
<title>up_read (3 samples, 0.38%)</title><rect x="345.6" y="181" width="4.6" height="15.0" fill="rgb(230,1,42)" rx="2" ry="2" />
<text  x="348.64" y="191.5" ></text>
</g>
<g >
<title>cpumask_next (2 samples, 0.26%)</title><rect x="893.5" y="181" width="3.0" height="15.0" fill="rgb(227,12,16)" rx="2" ry="2" />
<text  x="896.49" y="191.5" ></text>
</g>
<g >
<title>get_nr_dirty_inodes (11 samples, 1.40%)</title><rect x="896.5" y="181" width="16.6" height="15.0" fill="rgb(243,39,48)" rx="2" ry="2" />
<text  x="899.51" y="191.5" ></text>
</g>
<g >
<title>follow_page_pte (1 samples, 0.13%)</title><rect x="97.3" y="85" width="1.5" height="15.0" fill="rgb(242,132,32)" rx="2" ry="2" />
<text  x="100.30" y="95.5" ></text>
</g>
<g >
<title>folio_add_lru (1 samples, 0.13%)</title><rect x="1178.0" y="101" width="1.5" height="15.0" fill="rgb(245,19,26)" rx="2" ry="2" />
<text  x="1180.96" y="111.5" ></text>
</g>
<g >
<title>irqentry_exit (1 samples, 0.13%)</title><rect x="106.3" y="229" width="1.5" height="15.0" fill="rgb(241,127,39)" rx="2" ry="2" />
<text  x="109.33" y="239.5" ></text>
</g>
<g >
<title>-------------------------------- (1 samples, 0.13%)</title><rect x="186.1" y="277" width="1.5" height="15.0" fill="rgb(248,139,42)" rx="2" ry="2" />
<text  x="189.10" y="287.5" ></text>
</g>
<g >
<title>rmqueue (1 samples, 0.13%)</title><rect x="1184.0" y="69" width="1.5" height="15.0" fill="rgb(251,154,30)" rx="2" ry="2" />
<text  x="1186.98" y="79.5" ></text>
</g>
<g >
<title>[unknown] (20 samples, 2.55%)</title><rect x="238.8" y="309" width="30.1" height="15.0" fill="rgb(240,52,4)" rx="2" ry="2" />
<text  x="241.78" y="319.5" >[u..</text>
</g>
<g >
<title>-------------------------------- (1 samples, 0.13%)</title><rect x="106.3" y="277" width="1.5" height="15.0" fill="rgb(220,136,14)" rx="2" ry="2" />
<text  x="109.33" y="287.5" ></text>
</g>
<g >
<title>do_syscall_64 (54 samples, 6.89%)</title><rect x="268.9" y="245" width="81.3" height="15.0" fill="rgb(215,171,28)" rx="2" ry="2" />
<text  x="271.88" y="255.5" >do_syscal..</text>
</g>
<g >
<title>do_syscall_64 (190 samples, 24.23%)</title><rect x="884.5" y="245" width="285.9" height="15.0" fill="rgb(254,192,6)" rx="2" ry="2" />
<text  x="887.46" y="255.5" >do_syscall_64</text>
</g>
<g >
<title>__x64_sys_openat (1 samples, 0.13%)</title><rect x="240.3" y="229" width="1.5" height="15.0" fill="rgb(216,62,14)" rx="2" ry="2" />
<text  x="243.28" y="239.5" ></text>
</g>
<g >
<title>clear_page_orig (3 samples, 0.38%)</title><rect x="1179.5" y="69" width="4.5" height="15.0" fill="rgb(246,166,31)" rx="2" ry="2" />
<text  x="1182.46" y="79.5" ></text>
</g>
<g >
<title>__handle_mm_fault (6 samples, 0.77%)</title><rect x="1176.5" y="197" width="9.0" height="15.0" fill="rgb(253,9,13)" rx="2" ry="2" />
<text  x="1179.45" y="207.5" ></text>
</g>
<g >
<title>stress_cpu_div32.avx2 (2 samples, 0.26%)</title><rect x="187.6" y="293" width="3.0" height="15.0" fill="rgb(205,202,53)" rx="2" ry="2" />
<text  x="190.60" y="303.5" ></text>
</g>
<g >
<title>wp_page_copy (2 samples, 0.26%)</title><rect x="1187.0" y="149" width="3.0" height="15.0" fill="rgb(220,128,8)" rx="2" ry="2" />
<text  x="1189.99" y="159.5" ></text>
</g>
<g >
<title>all (784 samples, 100%)</title><rect x="10.0" y="341" width="1180.0" height="15.0" fill="rgb(212,9,26)" rx="2" ry="2" />
<text  x="13.00" y="351.5" ></text>
</g>
<g >
<title>ext4_sync_fs (1 samples, 0.13%)</title><rect x="341.1" y="165" width="1.5" height="15.0" fill="rgb(232,2,6)" rx="2" ry="2" />
<text  x="344.12" y="175.5" ></text>
</g>
<g >
<title>-------------------------------- (1 samples, 0.13%)</title><rect x="213.2" y="277" width="1.5" height="15.0" fill="rgb(209,149,17)" rx="2" ry="2" />
<text  x="216.19" y="287.5" ></text>
</g>
<g >
<title>follow_page_pte (2 samples, 0.26%)</title><rect x="98.8" y="69" width="3.0" height="15.0" fill="rgb(212,121,28)" rx="2" ry="2" />
<text  x="101.80" y="79.5" ></text>
</g>
<g >
<title>follow_page_mask (3 samples, 0.38%)</title><rect x="97.3" y="117" width="4.5" height="15.0" fill="rgb(214,75,4)" rx="2" ry="2" />
<text  x="100.30" y="127.5" ></text>
</g>
<g >
<title>lru_cache_add_inactive_or_unevictable (1 samples, 0.13%)</title><rect x="1178.0" y="133" width="1.5" height="15.0" fill="rgb(237,65,35)" rx="2" ry="2" />
<text  x="1180.96" y="143.5" ></text>
</g>
<g >
<title>iterate_supers (27 samples, 3.44%)</title><rect x="309.5" y="197" width="40.7" height="15.0" fill="rgb(228,19,39)" rx="2" ry="2" />
<text  x="312.52" y="207.5" >ite..</text>
</g>
<g >
<title>submit_bio_wait (1 samples, 0.13%)</title><rect x="892.0" y="165" width="1.5" height="15.0" fill="rgb(223,226,26)" rx="2" ry="2" />
<text  x="894.99" y="175.5" ></text>
</g>
<g >
<title>-------------------------------- (9 samples, 1.15%)</title><rect x="255.3" y="277" width="13.6" height="15.0" fill="rgb(210,74,12)" rx="2" ry="2" />
<text  x="258.33" y="287.5" ></text>
</g>
<g >
<title>__divtf3 (1 samples, 0.13%)</title><rect x="34.1" y="293" width="1.5" height="15.0" fill="rgb(242,53,15)" rx="2" ry="2" />
<text  x="37.08" y="303.5" ></text>
</g>
<g >
<title>-------------------------------- (1 samples, 0.13%)</title><rect x="40.1" y="277" width="1.5" height="15.0" fill="rgb(209,223,33)" rx="2" ry="2" />
<text  x="43.10" y="287.5" ></text>
</g>
<g >
<title>-------------------------------- (1 samples, 0.13%)</title><rect x="62.7" y="277" width="1.5" height="15.0" fill="rgb(228,118,12)" rx="2" ry="2" />
<text  x="65.68" y="287.5" ></text>
</g>
<g >
<title>-------------------------------- (11 samples, 1.40%)</title><rect x="46.1" y="277" width="16.6" height="15.0" fill="rgb(244,1,30)" rx="2" ry="2" />
<text  x="49.12" y="287.5" ></text>
</g>
<g >
<title>__ieee754_exp_fma (1 samples, 0.13%)</title><rect x="37.1" y="293" width="1.5" height="15.0" fill="rgb(225,120,30)" rx="2" ry="2" />
<text  x="40.09" y="303.5" ></text>
</g>
<g >
<title>_raw_spin_unlock (2 samples, 0.26%)</title><rect x="306.5" y="197" width="3.0" height="15.0" fill="rgb(248,130,6)" rx="2" ry="2" />
<text  x="309.51" y="207.5" ></text>
</g>
<g >
<title>irqentry_exit_to_user_mode (1 samples, 0.13%)</title><rect x="106.3" y="213" width="1.5" height="15.0" fill="rgb(221,41,44)" rx="2" ry="2" />
<text  x="109.33" y="223.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.13%)</title><rect x="240.3" y="261" width="1.5" height="15.0" fill="rgb(235,129,19)" rx="2" ry="2" />
<text  x="243.28" y="271.5" ></text>
</g>
<g >
<title>-------------------------------- (15 samples, 1.91%)</title><rect x="190.6" y="277" width="22.6" height="15.0" fill="rgb(219,57,25)" rx="2" ry="2" />
<text  x="193.61" y="287.5" >-..</text>
</g>
<g >
<title>ackermann (1 samples, 0.13%)</title><rect x="62.7" y="293" width="1.5" height="15.0" fill="rgb(208,30,49)" rx="2" ry="2" />
<text  x="65.68" y="303.5" ></text>
</g>
<g >
<title>handle_pte_fault (6 samples, 0.77%)</title><rect x="1176.5" y="181" width="9.0" height="15.0" fill="rgb(252,36,45)" rx="2" ry="2" />
<text  x="1179.45" y="191.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (1 samples, 0.13%)</title><rect x="222.2" y="197" width="1.5" height="15.0" fill="rgb(226,79,22)" rx="2" ry="2" />
<text  x="225.22" y="207.5" ></text>
</g>
<g >
<title>-------------------------------- (1 samples, 0.13%)</title><rect x="104.8" y="277" width="1.5" height="15.0" fill="rgb(217,195,41)" rx="2" ry="2" />
<text  x="107.82" y="287.5" ></text>
</g>
<g >
<title>stress_vm_cache_lines.avx2 (10 samples, 1.28%)</title><rect x="1170.4" y="293" width="15.1" height="15.0" fill="rgb(218,203,8)" rx="2" ry="2" />
<text  x="1173.43" y="303.5" ></text>
</g>
<g >
<title>asm_sysvec_call_function_single (1 samples, 0.13%)</title><rect x="246.3" y="261" width="1.5" height="15.0" fill="rgb(205,24,42)" rx="2" ry="2" />
<text  x="249.30" y="271.5" ></text>
</g>
<g >
<title>asm_sysvec_call_function_single (1 samples, 0.13%)</title><rect x="106.3" y="261" width="1.5" height="15.0" fill="rgb(248,147,12)" rx="2" ry="2" />
<text  x="109.33" y="271.5" ></text>
</g>
<g >
<title>__alloc_pages (4 samples, 0.51%)</title><rect x="1179.5" y="101" width="6.0" height="15.0" fill="rgb(212,145,4)" rx="2" ry="2" />
<text  x="1182.46" y="111.5" ></text>
</g>
<g >
<title>do_user_addr_fault (2 samples, 0.26%)</title><rect x="1187.0" y="229" width="3.0" height="15.0" fill="rgb(235,112,12)" rx="2" ry="2" />
<text  x="1189.99" y="239.5" ></text>
</g>
<g >
<title>vm_area_dup (1 samples, 0.13%)</title><rect x="14.5" y="133" width="1.5" height="15.0" fill="rgb(244,170,15)" rx="2" ry="2" />
<text  x="17.52" y="143.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (1 samples, 0.13%)</title><rect x="14.5" y="101" width="1.5" height="15.0" fill="rgb(224,138,6)" rx="2" ry="2" />
<text  x="17.52" y="111.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.26%)</title><rect x="13.0" y="261" width="3.0" height="15.0" fill="rgb(227,89,1)" rx="2" ry="2" />
<text  x="16.01" y="271.5" ></text>
</g>
<g >
<title>sync_filesystem (19 samples, 2.42%)</title><rect x="884.5" y="213" width="28.6" height="15.0" fill="rgb(230,211,11)" rx="2" ry="2" />
<text  x="887.46" y="223.5" >sy..</text>
</g>
<g >
<title>__udivti3 (11 samples, 1.40%)</title><rect x="46.1" y="293" width="16.6" height="15.0" fill="rgb(241,0,49)" rx="2" ry="2" />
<text  x="49.12" y="303.5" ></text>
</g>
<g >
<title>exit_to_user_mode_loop (1 samples, 0.13%)</title><rect x="246.3" y="181" width="1.5" height="15.0" fill="rgb(251,204,4)" rx="2" ry="2" />
<text  x="249.30" y="191.5" ></text>
</g>
<g >
<title>__sqrtl (1 samples, 0.13%)</title><rect x="41.6" y="293" width="1.5" height="15.0" fill="rgb(218,15,38)" rx="2" ry="2" />
<text  x="44.61" y="303.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.13%)</title><rect x="10.0" y="293" width="1.5" height="15.0" fill="rgb(244,98,21)" rx="2" ry="2" />
<text  x="13.00" y="303.5" ></text>
</g>
<g >
<title>copy_page_range (1 samples, 0.13%)</title><rect x="13.0" y="133" width="1.5" height="15.0" fill="rgb(232,8,45)" rx="2" ry="2" />
<text  x="16.01" y="143.5" ></text>
</g>
<g >
<title>do_wp_page (2 samples, 0.26%)</title><rect x="1187.0" y="165" width="3.0" height="15.0" fill="rgb(220,82,38)" rx="2" ry="2" />
<text  x="1189.99" y="175.5" ></text>
</g>
<g >
<title>__d_lookup_rcu (1 samples, 0.13%)</title><rect x="240.3" y="117" width="1.5" height="15.0" fill="rgb(242,182,21)" rx="2" ry="2" />
<text  x="243.28" y="127.5" ></text>
</g>
<g >
<title>follow_pmd_mask.isra.0 (2 samples, 0.26%)</title><rect x="98.8" y="85" width="3.0" height="15.0" fill="rgb(240,151,17)" rx="2" ry="2" />
<text  x="101.80" y="95.5" ></text>
</g>
<g >
<title>copy_p4d_range (1 samples, 0.13%)</title><rect x="13.0" y="117" width="1.5" height="15.0" fill="rgb(219,171,30)" rx="2" ry="2" />
<text  x="16.01" y="127.5" ></text>
</g>
<g >
<title>__x64_sys_syncfs (19 samples, 2.42%)</title><rect x="884.5" y="229" width="28.6" height="15.0" fill="rgb(222,173,21)" rx="2" ry="2" />
<text  x="887.46" y="239.5" >__..</text>
</g>
<g >
<title>irqentry_exit (1 samples, 0.13%)</title><rect x="222.2" y="229" width="1.5" height="15.0" fill="rgb(236,18,20)" rx="2" ry="2" />
<text  x="225.22" y="239.5" ></text>
</g>
<g >
<title>stress_cpu_dither.avx2 (1 samples, 0.13%)</title><rect x="186.1" y="293" width="1.5" height="15.0" fill="rgb(232,147,50)" rx="2" ry="2" />
<text  x="189.10" y="303.5" ></text>
</g>
<g >
<title>. (150 samples, 19.13%)</title><rect x="13.0" y="309" width="225.8" height="15.0" fill="rgb(224,202,6)" rx="2" ry="2" />
<text  x="16.01" y="319.5" >.</text>
</g>
<g >
<title>__bid32_to_binary64 (1 samples, 0.13%)</title><rect x="19.0" y="293" width="1.5" height="15.0" fill="rgb(221,182,13)" rx="2" ry="2" />
<text  x="22.03" y="303.5" ></text>
</g>
<g >
<title>__handle_mm_fault (2 samples, 0.26%)</title><rect x="101.8" y="101" width="3.0" height="15.0" fill="rgb(228,44,19)" rx="2" ry="2" />
<text  x="104.81" y="111.5" ></text>
</g>
<g >
<title>_find_next_bit (1 samples, 0.13%)</title><rect x="911.6" y="165" width="1.5" height="15.0" fill="rgb(239,165,45)" rx="2" ry="2" />
<text  x="914.56" y="175.5" ></text>
</g>
<g >
<title>submit_bio (1 samples, 0.13%)</title><rect x="892.0" y="149" width="1.5" height="15.0" fill="rgb(248,18,26)" rx="2" ry="2" />
<text  x="894.99" y="159.5" ></text>
</g>
<g >
<title>-------------------------------- (5 samples, 0.64%)</title><rect x="97.3" y="277" width="7.5" height="15.0" fill="rgb(246,134,37)" rx="2" ry="2" />
<text  x="100.30" y="287.5" ></text>
</g>
<g >
<title>-------------------------------- (5 samples, 0.64%)</title><rect x="216.2" y="277" width="7.5" height="15.0" fill="rgb(246,55,2)" rx="2" ry="2" />
<text  x="219.20" y="287.5" ></text>
</g>
<g >
<title>__GI_syncfs (545 samples, 69.52%)</title><rect x="350.2" y="293" width="820.2" height="15.0" fill="rgb(252,223,32)" rx="2" ry="2" />
<text  x="353.15" y="303.5" >__GI_syncfs</text>
</g>
<g >
<title>do_filp_open (1 samples, 0.13%)</title><rect x="240.3" y="197" width="1.5" height="15.0" fill="rgb(251,140,40)" rx="2" ry="2" />
<text  x="243.28" y="207.5" ></text>
</g>
<g >
<title>-------------------------------- (3 samples, 0.38%)</title><rect x="1185.5" y="277" width="4.5" height="15.0" fill="rgb(206,134,48)" rx="2" ry="2" />
<text  x="1188.48" y="287.5" ></text>
</g>
<g >
<title>-------------------------------- (1 samples, 0.13%)</title><rect x="214.7" y="277" width="1.5" height="15.0" fill="rgb(215,62,10)" rx="2" ry="2" />
<text  x="217.69" y="287.5" ></text>
</g>
<g >
<title>clear_page_orig (1 samples, 0.13%)</title><rect x="1188.5" y="69" width="1.5" height="15.0" fill="rgb(246,89,7)" rx="2" ry="2" />
<text  x="1191.49" y="79.5" ></text>
</g>
<g >
<title>expm1f64 (2 samples, 0.26%)</title><rect x="82.2" y="293" width="3.1" height="15.0" fill="rgb(229,33,52)" rx="2" ry="2" />
<text  x="85.24" y="303.5" ></text>
</g>
<g >
<title>irqentry_exit (1 samples, 0.13%)</title><rect x="246.3" y="229" width="1.5" height="15.0" fill="rgb(224,79,31)" rx="2" ry="2" />
<text  x="249.30" y="239.5" ></text>
</g>
<g >
<title>dquot_writeback_dquots (1 samples, 0.13%)</title><rect x="341.1" y="149" width="1.5" height="15.0" fill="rgb(230,25,44)" rx="2" ry="2" />
<text  x="344.12" y="159.5" ></text>
</g>
<g >
<title>__sin_fma (1 samples, 0.13%)</title><rect x="40.1" y="293" width="1.5" height="15.0" fill="rgb(245,130,35)" rx="2" ry="2" />
<text  x="43.10" y="303.5" ></text>
</g>
<g >
<title>-------------------------------- (3 samples, 0.38%)</title><rect x="243.3" y="277" width="4.5" height="15.0" fill="rgb(225,206,7)" rx="2" ry="2" />
<text  x="246.29" y="287.5" ></text>
</g>
<g >
<title>-------------------------------- (2 samples, 0.26%)</title><rect x="82.2" y="277" width="3.1" height="15.0" fill="rgb(239,96,12)" rx="2" ry="2" />
<text  x="85.24" y="287.5" ></text>
</g>
<g >
<title>get_mem_cgroup_from_mm (1 samples, 0.13%)</title><rect x="1187.0" y="117" width="1.5" height="15.0" fill="rgb(207,109,32)" rx="2" ry="2" />
<text  x="1189.99" y="127.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (170 samples, 21.68%)</title><rect x="914.6" y="229" width="255.8" height="15.0" fill="rgb(212,168,16)" rx="2" ry="2" />
<text  x="917.57" y="239.5" >syscall_enter_from_user_mode</text>
</g>
<g >
<title>dup_mm (2 samples, 0.26%)</title><rect x="13.0" y="165" width="3.0" height="15.0" fill="rgb(214,201,38)" rx="2" ry="2" />
<text  x="16.01" y="175.5" ></text>
</g>
<g >
<title>-------------------------------- (1 samples, 0.13%)</title><rect x="41.6" y="277" width="1.5" height="15.0" fill="rgb(244,148,39)" rx="2" ry="2" />
<text  x="44.61" y="287.5" ></text>
</g>
<g >
<title>lookup_fast (1 samples, 0.13%)</title><rect x="240.3" y="133" width="1.5" height="15.0" fill="rgb(207,118,48)" rx="2" ry="2" />
<text  x="243.28" y="143.5" ></text>
</g>
<g >
<title>do_exit (1 samples, 0.13%)</title><rect x="10.0" y="245" width="1.5" height="15.0" fill="rgb(232,108,51)" rx="2" ry="2" />
<text  x="13.00" y="255.5" ></text>
</g>
<g >
<title>__bid_round256_58_76 (2 samples, 0.26%)</title><rect x="29.6" y="293" width="3.0" height="15.0" fill="rgb(251,228,13)" rx="2" ry="2" />
<text  x="32.57" y="303.5" ></text>
</g>
<g >
<title>writeback_inodes_sb (13 samples, 1.66%)</title><rect x="893.5" y="197" width="19.6" height="15.0" fill="rgb(206,214,2)" rx="2" ry="2" />
<text  x="896.49" y="207.5" ></text>
</g>
<g >
<title>-------------------------------- (1 samples, 0.13%)</title><rect x="32.6" y="277" width="1.5" height="15.0" fill="rgb(206,41,13)" rx="2" ry="2" />
<text  x="35.58" y="287.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.64%)</title><rect x="97.3" y="261" width="7.5" height="15.0" fill="rgb(244,219,46)" rx="2" ry="2" />
<text  x="100.30" y="271.5" ></text>
</g>
<g >
<title>-------------------------------- (1 samples, 0.13%)</title><rect x="237.3" y="277" width="1.5" height="15.0" fill="rgb(237,121,44)" rx="2" ry="2" />
<text  x="240.27" y="287.5" ></text>
</g>
<g >
<title>madvise_walk_vmas (5 samples, 0.64%)</title><rect x="97.3" y="197" width="7.5" height="15.0" fill="rgb(217,155,28)" rx="2" ry="2" />
<text  x="100.30" y="207.5" ></text>
</g>
<g >
<title>kernel_clone (2 samples, 0.26%)</title><rect x="13.0" y="197" width="3.0" height="15.0" fill="rgb(208,170,16)" rx="2" ry="2" />
<text  x="16.01" y="207.5" ></text>
</g>
<g >
<title>wp_page_copy (6 samples, 0.77%)</title><rect x="1176.5" y="149" width="9.0" height="15.0" fill="rgb(209,205,27)" rx="2" ry="2" />
<text  x="1179.45" y="159.5" ></text>
</g>
<g >
<title>__binary80_to_bid128 (1 samples, 0.13%)</title><rect x="32.6" y="293" width="1.5" height="15.0" fill="rgb(222,66,32)" rx="2" ry="2" />
<text  x="35.58" y="303.5" ></text>
</g>
<g >
<title>exit_to_user_mode_loop (1 samples, 0.13%)</title><rect x="31.1" y="181" width="1.5" height="15.0" fill="rgb(220,66,49)" rx="2" ry="2" />
<text  x="34.07" y="191.5" ></text>
</g>
<g >
<title>-------------------------------- (1 samples, 0.13%)</title><rect x="238.8" y="277" width="1.5" height="15.0" fill="rgb(207,64,22)" rx="2" ry="2" />
<text  x="241.78" y="287.5" ></text>
</g>
<g >
<title>asm_sysvec_call_function_single (1 samples, 0.13%)</title><rect x="222.2" y="261" width="1.5" height="15.0" fill="rgb(239,3,16)" rx="2" ry="2" />
<text  x="225.22" y="271.5" ></text>
</g>
<g >
<title>-------------------------------- (1 samples, 0.13%)</title><rect x="35.6" y="277" width="1.5" height="15.0" fill="rgb(246,77,12)" rx="2" ry="2" />
<text  x="38.59" y="287.5" ></text>
</g>
<g >
<title>follow_pud_mask.isra.0 (3 samples, 0.38%)</title><rect x="97.3" y="101" width="4.5" height="15.0" fill="rgb(240,155,13)" rx="2" ry="2" />
<text  x="100.30" y="111.5" ></text>
</g>
<g >
<title>dup_mmap (2 samples, 0.26%)</title><rect x="13.0" y="149" width="3.0" height="15.0" fill="rgb(225,19,15)" rx="2" ry="2" />
<text  x="16.01" y="159.5" ></text>
</g>
<g >
<title>irqentry_exit_to_user_mode (1 samples, 0.13%)</title><rect x="222.2" y="213" width="1.5" height="15.0" fill="rgb(242,22,23)" rx="2" ry="2" />
<text  x="225.22" y="223.5" ></text>
</g>
<g >
<title>-------------------------------- (2 samples, 0.26%)</title><rect x="13.0" y="277" width="3.0" height="15.0" fill="rgb(218,79,26)" rx="2" ry="2" />
<text  x="16.01" y="287.5" ></text>
</g>
<g >
<title>_raw_spin_lock (25 samples, 3.19%)</title><rect x="268.9" y="197" width="37.6" height="15.0" fill="rgb(246,205,10)" rx="2" ry="2" />
<text  x="271.88" y="207.5" >_ra..</text>
</g>
<g >
<title>-------------------------------- (1 samples, 0.13%)</title><rect x="23.5" y="277" width="1.6" height="15.0" fill="rgb(228,109,46)" rx="2" ry="2" />
<text  x="26.55" y="287.5" ></text>
</g>
<g >
<title>__tls_get_addr (2 samples, 0.26%)</title><rect x="43.1" y="293" width="3.0" height="15.0" fill="rgb(208,1,12)" rx="2" ry="2" />
<text  x="46.11" y="303.5" ></text>
</g>
<g >
<title>irqentry_exit (1 samples, 0.13%)</title><rect x="31.1" y="229" width="1.5" height="15.0" fill="rgb(222,164,20)" rx="2" ry="2" />
<text  x="34.07" y="239.5" ></text>
</g>
<g >
<title>do_user_addr_fault (7 samples, 0.89%)</title><rect x="1174.9" y="229" width="10.6" height="15.0" fill="rgb(247,19,7)" rx="2" ry="2" />
<text  x="1177.95" y="239.5" ></text>
</g>
<g >
<title>-------------------------------- (2 samples, 0.26%)</title><rect x="43.1" y="277" width="3.0" height="15.0" fill="rgb(249,45,26)" rx="2" ry="2" />
<text  x="46.11" y="287.5" ></text>
</g>
<g >
<title>sysvec_call_function_single (1 samples, 0.13%)</title><rect x="222.2" y="245" width="1.5" height="15.0" fill="rgb(231,141,50)" rx="2" ry="2" />
<text  x="225.22" y="255.5" ></text>
</g>
<g >
<title>stress_cpu_rand48 (1 samples, 0.13%)</title><rect x="237.3" y="293" width="1.5" height="15.0" fill="rgb(214,224,1)" rx="2" ry="2" />
<text  x="240.27" y="303.5" ></text>
</g>
<g >
<title>__do_sys_clone (2 samples, 0.26%)</title><rect x="13.0" y="213" width="3.0" height="15.0" fill="rgb(222,124,41)" rx="2" ry="2" />
<text  x="16.01" y="223.5" ></text>
</g>
<g >
<title>__folio_alloc (4 samples, 0.51%)</title><rect x="1179.5" y="117" width="6.0" height="15.0" fill="rgb(242,114,13)" rx="2" ry="2" />
<text  x="1182.46" y="127.5" ></text>
</g>
<g >
<title>exc_page_fault (2 samples, 0.26%)</title><rect x="1187.0" y="245" width="3.0" height="15.0" fill="rgb(231,134,41)" rx="2" ry="2" />
<text  x="1189.99" y="255.5" ></text>
</g>
<g >
<title>-------------------------------- (1 samples, 0.13%)</title><rect x="240.3" y="277" width="1.5" height="15.0" fill="rgb(227,201,21)" rx="2" ry="2" />
<text  x="243.28" y="287.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.13%)</title><rect x="10.0" y="309" width="1.5" height="15.0" fill="rgb(216,34,36)" rx="2" ry="2" />
<text  x="13.00" y="319.5" ></text>
</g>
<g >
<title>sysvec_call_function_single (1 samples, 0.13%)</title><rect x="31.1" y="245" width="1.5" height="15.0" fill="rgb(235,166,43)" rx="2" ry="2" />
<text  x="34.07" y="255.5" ></text>
</g>
<g >
<title>stress_cpu_matrix_prod.avx2 (5 samples, 0.64%)</title><rect x="216.2" y="293" width="7.5" height="15.0" fill="rgb(226,37,31)" rx="2" ry="2" />
<text  x="219.20" y="303.5" ></text>
</g>
<g >
<title>stress_cpu_correlate (52 samples, 6.63%)</title><rect x="107.8" y="293" width="78.3" height="15.0" fill="rgb(208,6,13)" rx="2" ry="2" />
<text  x="110.83" y="303.5" >stress_cp..</text>
</g>
<g >
<title>__expf_fma (1 samples, 0.13%)</title><rect x="35.6" y="293" width="1.5" height="15.0" fill="rgb(231,2,12)" rx="2" ry="2" />
<text  x="38.59" y="303.5" ></text>
</g>
<g >
<title>exit_mmap (1 samples, 0.13%)</title><rect x="10.0" y="197" width="1.5" height="15.0" fill="rgb(235,109,8)" rx="2" ry="2" />
<text  x="13.00" y="207.5" ></text>
</g>
<g >
<title>irqentry_exit_to_user_mode (1 samples, 0.13%)</title><rect x="246.3" y="213" width="1.5" height="15.0" fill="rgb(245,30,20)" rx="2" ry="2" />
<text  x="249.30" y="223.5" ></text>
</g>
<g >
<title>path_openat (1 samples, 0.13%)</title><rect x="240.3" y="181" width="1.5" height="15.0" fill="rgb(229,180,51)" rx="2" ry="2" />
<text  x="243.28" y="191.5" ></text>
</g>
<g >
<title>__bid64_div (2 samples, 0.26%)</title><rect x="20.5" y="293" width="3.0" height="15.0" fill="rgb(228,136,11)" rx="2" ry="2" />
<text  x="23.54" y="303.5" ></text>
</g>
<g >
<title>-------------------------------- (1 samples, 0.13%)</title><rect x="26.6" y="277" width="1.5" height="15.0" fill="rgb(231,221,4)" rx="2" ry="2" />
<text  x="29.56" y="287.5" ></text>
</g>
<g >
<title>do_syscall_64 (5 samples, 0.64%)</title><rect x="97.3" y="245" width="7.5" height="15.0" fill="rgb(238,124,30)" rx="2" ry="2" />
<text  x="100.30" y="255.5" ></text>
</g>
<g >
<title>[unknown] (612 samples, 78.06%)</title><rect x="268.9" y="325" width="921.1" height="15.0" fill="rgb(226,119,0)" rx="2" ry="2" />
<text  x="271.88" y="335.5" >[unknown]</text>
</g>
<g >
<title>_raw_spin_unlock (1 samples, 0.13%)</title><rect x="311.0" y="181" width="1.5" height="15.0" fill="rgb(228,106,5)" rx="2" ry="2" />
<text  x="314.02" y="191.5" ></text>
</g>
<g >
<title>ext4_sync_fs (4 samples, 0.51%)</title><rect x="887.5" y="197" width="6.0" height="15.0" fill="rgb(237,185,5)" rx="2" ry="2" />
<text  x="890.47" y="207.5" ></text>
</g>
<g >
<title>-------------------------------- (545 samples, 69.52%)</title><rect x="350.2" y="277" width="820.2" height="15.0" fill="rgb(224,26,18)" rx="2" ry="2" />
<text  x="353.15" y="287.5" >--------------------------------</text>
</g>
<g >
<title>-------------------------------- (10 samples, 1.28%)</title><rect x="1170.4" y="277" width="15.1" height="15.0" fill="rgb(207,136,5)" rx="2" ry="2" />
<text  x="1173.43" y="287.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.26%)</title><rect x="13.0" y="245" width="3.0" height="15.0" fill="rgb(220,18,44)" rx="2" ry="2" />
<text  x="16.01" y="255.5" ></text>
</g>
<g >
<title>handle_mm_fault (2 samples, 0.26%)</title><rect x="1187.0" y="213" width="3.0" height="15.0" fill="rgb(240,111,9)" rx="2" ry="2" />
<text  x="1189.99" y="223.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (2 samples, 0.26%)</title><rect x="1187.0" y="261" width="3.0" height="15.0" fill="rgb(207,33,7)" rx="2" ry="2" />
<text  x="1189.99" y="271.5" ></text>
</g>
<g >
<title>stress_cpu_gamma (15 samples, 1.91%)</title><rect x="190.6" y="293" width="22.6" height="15.0" fill="rgb(232,145,54)" rx="2" ry="2" />
<text  x="193.61" y="303.5" >s..</text>
</g>
<g >
<title>vma_alloc_folio (1 samples, 0.13%)</title><rect x="1188.5" y="133" width="1.5" height="15.0" fill="rgb(223,224,47)" rx="2" ry="2" />
<text  x="1191.49" y="143.5" ></text>
</g>
<g >
<title>stress_cpu_matrix_prod.avx2 (9 samples, 1.15%)</title><rect x="255.3" y="293" width="13.6" height="15.0" fill="rgb(214,227,7)" rx="2" ry="2" />
<text  x="258.33" y="303.5" ></text>
</g>
<g >
<title>rmqueue_pcplist.constprop.0 (1 samples, 0.13%)</title><rect x="1184.0" y="53" width="1.5" height="15.0" fill="rgb(242,107,2)" rx="2" ry="2" />
<text  x="1186.98" y="63.5" ></text>
</g>
<g >
<title>__bid128_add (2 samples, 0.26%)</title><rect x="16.0" y="293" width="3.0" height="15.0" fill="rgb(249,74,51)" rx="2" ry="2" />
<text  x="19.02" y="303.5" ></text>
</g>
<g >
<title>irqentry_exit_to_user_mode (1 samples, 0.13%)</title><rect x="31.1" y="213" width="1.5" height="15.0" fill="rgb(252,118,31)" rx="2" ry="2" />
<text  x="34.07" y="223.5" ></text>
</g>
<g >
<title>get_page_from_freelist (4 samples, 0.51%)</title><rect x="1179.5" y="85" width="6.0" height="15.0" fill="rgb(223,29,17)" rx="2" ry="2" />
<text  x="1182.46" y="95.5" ></text>
</g>
<g >
<title>handle_mm_fault (6 samples, 0.77%)</title><rect x="1176.5" y="213" width="9.0" height="15.0" fill="rgb(241,163,31)" rx="2" ry="2" />
<text  x="1179.45" y="223.5" ></text>
</g>
<g >
<title>-------------------------------- (1 samples, 0.13%)</title><rect x="10.0" y="325" width="1.5" height="15.0" fill="rgb(247,165,40)" rx="2" ry="2" />
<text  x="13.00" y="335.5" ></text>
</g>
<g >
<title>errseq_check_and_advance (1 samples, 0.13%)</title><rect x="913.1" y="229" width="1.5" height="15.0" fill="rgb(240,115,27)" rx="2" ry="2" />
<text  x="916.06" y="239.5" ></text>
</g>
<g >
<title>__cond_resched (1 samples, 0.13%)</title><rect x="309.5" y="181" width="1.5" height="15.0" fill="rgb(226,68,22)" rx="2" ry="2" />
<text  x="312.52" y="191.5" ></text>
</g>
<g >
<title>-------------------------------- (54 samples, 6.89%)</title><rect x="268.9" y="277" width="81.3" height="15.0" fill="rgb(248,77,34)" rx="2" ry="2" />
<text  x="271.88" y="287.5" >---------..</text>
</g>
<g >
<title>stress_cpu_intconversion (1 samples, 0.13%)</title><rect x="214.7" y="293" width="1.5" height="15.0" fill="rgb(226,127,41)" rx="2" ry="2" />
<text  x="217.69" y="303.5" ></text>
</g>
<g >
<title>-------------------------------- (1 samples, 0.13%)</title><rect x="38.6" y="277" width="1.5" height="15.0" fill="rgb(232,146,36)" rx="2" ry="2" />
<text  x="41.60" y="287.5" ></text>
</g>
<g >
<title>vma_alloc_folio (4 samples, 0.51%)</title><rect x="1179.5" y="133" width="6.0" height="15.0" fill="rgb(228,10,18)" rx="2" ry="2" />
<text  x="1182.46" y="143.5" ></text>
</g>
<g >
<title>should_fail_bio (1 samples, 0.13%)</title><rect x="892.0" y="133" width="1.5" height="15.0" fill="rgb(207,41,20)" rx="2" ry="2" />
<text  x="894.99" y="143.5" ></text>
</g>
<g >
<title>walk_component (1 samples, 0.13%)</title><rect x="240.3" y="149" width="1.5" height="15.0" fill="rgb(244,2,51)" rx="2" ry="2" />
<text  x="243.28" y="159.5" ></text>
</g>
<g >
<title>-------------------------------- (1 samples, 0.13%)</title><rect x="25.1" y="277" width="1.5" height="15.0" fill="rgb(241,186,12)" rx="2" ry="2" />
<text  x="28.05" y="287.5" ></text>
</g>
<g >
<title>madvise (5 samples, 0.64%)</title><rect x="97.3" y="293" width="7.5" height="15.0" fill="rgb(239,107,46)" rx="2" ry="2" />
<text  x="100.30" y="303.5" ></text>
</g>
<g >
<title>_Fork (2 samples, 0.26%)</title><rect x="13.0" y="293" width="3.0" height="15.0" fill="rgb(238,35,1)" rx="2" ry="2" />
<text  x="16.01" y="303.5" ></text>
</g>
<g >
<title>exc_page_fault (7 samples, 0.89%)</title><rect x="1174.9" y="245" width="10.6" height="15.0" fill="rgb(233,39,8)" rx="2" ry="2" />
<text  x="1177.95" y="255.5" ></text>
</g>
<g >
<title>sync_inodes_sb (1 samples, 0.13%)</title><rect x="342.6" y="165" width="1.5" height="15.0" fill="rgb(248,65,27)" rx="2" ry="2" />
<text  x="345.63" y="175.5" ></text>
</g>
<g >
<title>-------------------------------- (1 samples, 0.13%)</title><rect x="80.7" y="277" width="1.5" height="15.0" fill="rgb(241,74,6)" rx="2" ry="2" />
<text  x="83.74" y="287.5" ></text>
</g>
<g >
<title>__x64_sys_sync (54 samples, 6.89%)</title><rect x="268.9" y="229" width="81.3" height="15.0" fill="rgb(205,114,3)" rx="2" ry="2" />
<text  x="271.88" y="239.5" >__x64_sys..</text>
</g>
<g >
<title>queens_try (1 samples, 0.13%)</title><rect x="104.8" y="293" width="1.5" height="15.0" fill="rgb(242,7,39)" rx="2" ry="2" />
<text  x="107.82" y="303.5" ></text>
</g>
<g >
<title>exit_mm (1 samples, 0.13%)</title><rect x="10.0" y="229" width="1.5" height="15.0" fill="rgb(253,110,4)" rx="2" ry="2" />
<text  x="13.00" y="239.5" ></text>
</g>
<g >
<title>mmput (1 samples, 0.13%)</title><rect x="10.0" y="213" width="1.5" height="15.0" fill="rgb(235,9,0)" rx="2" ry="2" />
<text  x="13.00" y="223.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (8 samples, 1.02%)</title><rect x="329.1" y="181" width="12.0" height="15.0" fill="rgb(208,43,36)" rx="2" ry="2" />
<text  x="332.08" y="191.5" ></text>
</g>
<g >
<title>-------------------------------- (1 samples, 0.13%)</title><rect x="28.1" y="277" width="1.5" height="15.0" fill="rgb(239,219,33)" rx="2" ry="2" />
<text  x="31.06" y="287.5" ></text>
</g>
<g >
<title>ccitt_crc16 (11 samples, 1.40%)</title><rect x="64.2" y="293" width="16.5" height="15.0" fill="rgb(213,116,3)" rx="2" ry="2" />
<text  x="67.18" y="303.5" ></text>
</g>
<g >
<title>do_sys_openat2 (1 samples, 0.13%)</title><rect x="240.3" y="213" width="1.5" height="15.0" fill="rgb(216,9,20)" rx="2" ry="2" />
<text  x="243.28" y="223.5" ></text>
</g>
<g >
<title>sync_inodes_sb (1 samples, 0.13%)</title><rect x="344.1" y="181" width="1.5" height="15.0" fill="rgb(224,70,45)" rx="2" ry="2" />
<text  x="347.13" y="191.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (1 samples, 0.13%)</title><rect x="246.3" y="197" width="1.5" height="15.0" fill="rgb(251,229,4)" rx="2" ry="2" />
<text  x="249.30" y="207.5" ></text>
</g>
<g >
<title>__bid_muldd3 (1 samples, 0.13%)</title><rect x="28.1" y="293" width="1.5" height="15.0" fill="rgb(222,152,30)" rx="2" ry="2" />
<text  x="31.06" y="303.5" ></text>
</g>
<g >
<title>madvise_populate (5 samples, 0.64%)</title><rect x="97.3" y="165" width="7.5" height="15.0" fill="rgb(251,150,51)" rx="2" ry="2" />
<text  x="100.30" y="175.5" ></text>
</g>
<g >
<title>-------------------------------- (52 samples, 6.63%)</title><rect x="107.8" y="277" width="78.3" height="15.0" fill="rgb(247,71,45)" rx="2" ry="2" />
<text  x="110.83" y="287.5" >---------..</text>
</g>
<g >
<title>__folio_alloc (1 samples, 0.13%)</title><rect x="1188.5" y="117" width="1.5" height="15.0" fill="rgb(232,142,38)" rx="2" ry="2" />
<text  x="1191.49" y="127.5" ></text>
</g>
<g >
<title>__kernel_rem_pio2 (1 samples, 0.13%)</title><rect x="38.6" y="293" width="1.5" height="15.0" fill="rgb(206,208,39)" rx="2" ry="2" />
<text  x="41.60" y="303.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.13%)</title><rect x="238.8" y="293" width="1.5" height="15.0" fill="rgb(251,145,49)" rx="2" ry="2" />
<text  x="241.78" y="303.5" ></text>
</g>
<g >
<title>-------------------------------- (1 samples, 0.13%)</title><rect x="250.8" y="277" width="1.5" height="15.0" fill="rgb(252,96,1)" rx="2" ry="2" />
<text  x="253.82" y="287.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (1 samples, 0.13%)</title><rect x="14.5" y="117" width="1.5" height="15.0" fill="rgb(230,107,13)" rx="2" ry="2" />
<text  x="17.52" y="127.5" ></text>
</g>
<g >
<title>-------------------------------- (9 samples, 1.15%)</title><rect x="223.7" y="277" width="13.6" height="15.0" fill="rgb(231,54,31)" rx="2" ry="2" />
<text  x="226.72" y="287.5" ></text>
</g>
<g >
<title>exit_to_user_mode_loop (1 samples, 0.13%)</title><rect x="106.3" y="181" width="1.5" height="15.0" fill="rgb(211,37,21)" rx="2" ry="2" />
<text  x="109.33" y="191.5" ></text>
</g>
<g >
<title>__x64_sys_clone (2 samples, 0.26%)</title><rect x="13.0" y="229" width="3.0" height="15.0" fill="rgb(233,14,1)" rx="2" ry="2" />
<text  x="16.01" y="239.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (1 samples, 0.13%)</title><rect x="31.1" y="197" width="1.5" height="15.0" fill="rgb(219,113,15)" rx="2" ry="2" />
<text  x="34.07" y="207.5" ></text>
</g>
<g >
<title>-------------------------------- (2 samples, 0.26%)</title><rect x="16.0" y="277" width="3.0" height="15.0" fill="rgb(252,27,36)" rx="2" ry="2" />
<text  x="19.02" y="287.5" ></text>
</g>
<g >
<title>__get_vma_policy (1 samples, 0.13%)</title><rect x="1176.5" y="133" width="1.5" height="15.0" fill="rgb(253,7,30)" rx="2" ry="2" />
<text  x="1179.45" y="143.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (190 samples, 24.23%)</title><rect x="884.5" y="261" width="285.9" height="15.0" fill="rgb(225,20,51)" rx="2" ry="2" />
<text  x="887.46" y="271.5" >entry_SYSCALL_64_after_hwframe</text>
</g>
<g >
<title>__bid64_to_bid32 (1 samples, 0.13%)</title><rect x="25.1" y="293" width="1.5" height="15.0" fill="rgb(207,99,13)" rx="2" ry="2" />
<text  x="28.05" y="303.5" ></text>
</g>
<g >
<title>__bid_addtd3 (1 samples, 0.13%)</title><rect x="241.8" y="293" width="1.5" height="15.0" fill="rgb(236,41,21)" rx="2" ry="2" />
<text  x="244.79" y="303.5" ></text>
</g>
<g >
<title>. (171 samples, 21.81%)</title><rect x="11.5" y="325" width="257.4" height="15.0" fill="rgb(205,61,41)" rx="2" ry="2" />
<text  x="14.51" y="335.5" >.</text>
</g>
<g >
<title>__mem_cgroup_charge (1 samples, 0.13%)</title><rect x="1187.0" y="133" width="1.5" height="15.0" fill="rgb(236,81,4)" rx="2" ry="2" />
<text  x="1189.99" y="143.5" ></text>
</g>
<g >
<title>__x64_sys_exit_group (1 samples, 0.13%)</title><rect x="10.0" y="277" width="1.5" height="15.0" fill="rgb(250,112,17)" rx="2" ry="2" />
<text  x="13.00" y="287.5" ></text>
</g>
<g >
<title>folio_mark_accessed (2 samples, 0.26%)</title><rect x="98.8" y="37" width="3.0" height="15.0" fill="rgb(254,166,38)" rx="2" ry="2" />
<text  x="101.80" y="47.5" ></text>
</g>
<g >
<title>-------------------------------- (8 samples, 1.02%)</title><rect x="85.3" y="277" width="12.0" height="15.0" fill="rgb(245,64,5)" rx="2" ry="2" />
<text  x="88.26" y="287.5" ></text>
</g>
<g >
<title>mark_page_accessed (2 samples, 0.26%)</title><rect x="98.8" y="53" width="3.0" height="15.0" fill="rgb(214,183,6)" rx="2" ry="2" />
<text  x="101.80" y="63.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.13%)</title><rect x="240.3" y="245" width="1.5" height="15.0" fill="rgb(237,178,44)" rx="2" ry="2" />
<text  x="243.28" y="255.5" ></text>
</g>
<g >
<title>stress_cpu_complex_float.avx2 (1 samples, 0.13%)</title><rect x="106.3" y="293" width="1.5" height="15.0" fill="rgb(212,48,4)" rx="2" ry="2" />
<text  x="109.33" y="303.5" ></text>
</g>
</g>
</svg>
